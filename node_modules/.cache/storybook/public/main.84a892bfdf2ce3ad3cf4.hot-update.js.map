{"version":3,"file":"main.84a892bfdf2ce3ad3cf4.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://minit-typescript/./src/components/molecules/TimePeriodCard/index.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import TimePeriodcard from \\\".\\\";\\nimport { ComponentStory } from \\\"@storybook/react\\\";\\nimport bitcoin from '../../../../public/assets/bitcoin.png';\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'molecules/TimePeriodcard',\\n  component: TimePeriodcard,\\n};\\n\\nconst Template:ComponentStory < typeof TimePeriodcard>= (args) => (\\n  <TimePeriodcard {...args} />\\n);\\n\\nconst handleTextClick=() =>{\\n    alert('Text clicked')\\n}\\n\\n\\nexport const Primary = Template.bind({});\\nPrimary.args = { \\n  width:304,\\n  height:52,\\n  onclickText:handleTextClick,\\n  textColor:'#7D7D89'\\n};\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":56,\"line\":13},\"endLoc\":{\"col\":1,\"line\":15},\"startBody\":{\"col\":56,\"line\":13},\"endBody\":{\"col\":1,\"line\":15}}};\n    \nimport TimePeriodcard from \".\";\nimport { ComponentStory } from \"@storybook/react\";\nimport bitcoin from '../../../../public/assets/bitcoin.png';\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'molecules/TimePeriodcard',\n  component: TimePeriodcard,\n};\n\nconst Template:ComponentStory < typeof TimePeriodcard>= (args) => (\n  <TimePeriodcard {...args} />\n);\n\nconst handleTextClick=() =>{\n    alert('Text clicked')\n}\n\n\nexport const Primary = Template.bind({});\nPrimary.args = { \n  width:304,\n  height:52,\n  onclickText:handleTextClick,\n  textColor:'#7D7D89'\n};\n\n\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => (\\n  <TimePeriodcard {...args} />\\n)\" }, ...Primary.parameters };"],"names":[],"sourceRoot":""}