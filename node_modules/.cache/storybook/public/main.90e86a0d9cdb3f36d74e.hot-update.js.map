{"version":3,"file":"main.90e86a0d9cdb3f36d74e.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAjBA;AAmBA;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://minit-typescript/./src/components/molecules/ChooseCryptocard/index.stories.tsx","webpack://minit-typescript/./src/components/molecules/ChooseCryptocard/index.tsx","webpack://minit-typescript/./src/ sync ^\\.(?cc12"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\n\nimport  CryptoCardMenu  from './index';\n\nconst meta: Meta<typeof CryptoCardMenu> = {\n  component: CryptoCardMenu,\n};\ntype Story = StoryObj<typeof CryptoCardMenu>;\nexport default meta;\n\n\n export const Primary: Story = {\n    render: () => <CryptoCardMenu height={159} width={156} currencyType={'Bitcoin'} amount={'$ 1000000'}  />\n  };\n\n \n\n","import { Card, Typography } from '@mui/joy';\nimport React, { useState } from 'react';\nimport MuiIcon from '../../atoms/MuiIcon'; \nimport CryptoCardMenu from '../CryptoCardMenu';\n\ninterface CryptoCard{\n    height:number;\n    width:number;\n    text:string;\n    \n}\n\nconst ChooseCryptocard: React.FC<CryptoCard> = ( {height,width,text}) => {\n\n\n  return (\n    <Card variant=\"outlined\" sx={{ height:159,width:156 ,alignItems:'center',borderRadius:0}} >    \n      \n    <Typography level=\"h6\" fontSize=\"xl\" sx={{ mb: 0.5 }}>\n      {text}\n    </Typography>\n    <span style={{display:'flex',flexDirection:'column'}}>\n    <CryptoCardMenu height={159} width={156} currencyType={'Bitcoin'} amount={'$ 10000'}/>\n    <CryptoCardMenu height={159} width={156} currencyType={'Etherium'} amount={'$ 10000'}/>\n    <CryptoCardMenu height={159} width={156} currencyType={'Binance'} amount={'$ 10000'}/>\n    <CryptoCardMenu height={159} width={156} currencyType={'Teather'} amount={'$ 10000'}/>\n    </span>\n  </Card>\n  );\n};\n\nexport default ChooseCryptocard\n\n","var map = {\n\t\"./components/atoms/MiniteAvatar/index.stories.tsx\": \"./src/components/atoms/MiniteAvatar/index.stories.tsx\",\n\t\"./components/atoms/MiniteButton/index.stories.tsx\": \"./src/components/atoms/MiniteButton/index.stories.tsx\",\n\t\"./components/atoms/MiniteIcon/index.stories.tsx\": \"./src/components/atoms/MiniteIcon/index.stories.tsx\",\n\t\"./components/atoms/MiniteSlider/index.stories.tsx\": \"./src/components/atoms/MiniteSlider/index.stories.tsx\",\n\t\"./components/atoms/MuiIcon/index.stories.tsx\": \"./src/components/atoms/MuiIcon/index.stories.tsx\",\n\t\"./components/atoms/Typography/index.stories.tsx\": \"./src/components/atoms/Typography/index.stories.tsx\",\n\t\"./components/molecules/ChooseCryptocard/index.stories.tsx\": \"./src/components/molecules/ChooseCryptocard/index.stories.tsx\",\n\t\"./components/molecules/CryptoCardMenu/index.stories.tsx\": \"./src/components/molecules/CryptoCardMenu/index.stories.tsx\",\n\t\"./stories/Button.stories.ts\": \"./src/stories/Button.stories.ts\",\n\t\"./stories/Header.stories.ts\": \"./src/stories/Header.stories.ts\",\n\t\"./stories/Page.stories.ts\": \"./src/stories/Page.stories.ts\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";"],"names":[],"sourceRoot":""}