{"version":3,"file":"main.7f79d30595bcc4f7c961.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AANA;AAQA","sources":["webpack://minit-typescript/./src/components/atoms/button/Button.stories.tsx","webpack://minit-typescript/./src/components/atoms/button/index.tsx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/react';\n\nimport { Button } from './index.tsx';\n\nconst meta: Meta<typeof Button> = {\n  component: Button,\n};\n\nexport default meta;\ntype Story = StoryObj<typeof Button>;\n\n/*\n *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.\n * See https://storybook.js.org/docs/react/api/csf\n * to learn how to use render functions.\n */\nexport const Primary: Story = {\n  render: () => <Button primary label=\"Button\" />,\n};","import React from 'react';\n\ninterface ButtonProps {\n  onClick: () => void;\n  disabled?: boolean;\n  className?: string;\n  children: React.ReactNode;\n}\n\nconst Button: React.FC<ButtonProps> = ({ onClick, disabled = false, className = '', children }) => {\n  return (\n    <button className={`button ${className}`} onClick={onClick} disabled={disabled}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n"],"names":[],"sourceRoot":""}