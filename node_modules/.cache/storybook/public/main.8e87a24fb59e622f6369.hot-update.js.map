{"version":3,"file":"main.8e87a24fb59e622f6369.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AAEA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAbA;AAeA","sources":["webpack://minit-typescript/./src/components/organisms/Navbar/index.stories.tsx","webpack://minit-typescript/./src/components/organisms/Navbar/index.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import Navbar from \\\".\\\";\\nimport { ComponentStory } from \\\"@storybook/react\\\";\\nimport dashboard from '../../../../public/assets/dashboard.png';\\nexport default {\\n  /* ðŸ‘‡ The title prop is optional.\\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\\n  * to learn how to generate automatic titles\\n  */\\n  title: 'organisms/Navbar',\\n  component: Navbar,\\n};\\n\\nconst Template:ComponentStory < typeof Navbar>= (args) => (\\n  <Navbar {...args} />\\n);\\n\\n\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n  url:dashboard,\\n  height:24,\\n  width:24,\\n};\\n\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Secondary\":{\"startLoc\":{\"col\":48,\"line\":13},\"endLoc\":{\"col\":1,\"line\":15},\"startBody\":{\"col\":48,\"line\":13},\"endBody\":{\"col\":1,\"line\":15}}};\n    \nimport Navbar from \".\";\nimport { ComponentStory } from \"@storybook/react\";\nimport dashboard from '../../../../public/assets/dashboard.png';\nexport default {\n  /* ðŸ‘‡ The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'organisms/Navbar',\n  component: Navbar,\n};\n\nconst Template:ComponentStory < typeof Navbar>= (args) => (\n  <Navbar {...args} />\n);\n\n\n\nexport const Secondary = Template.bind({});\nSecondary.args = {\n  url:dashboard,\n  height:24,\n  width:24,\n};\n\n\n\n\n\nSecondary.parameters = { storySource: { source: \"(args) => (\\n  <Navbar {...args} />\\n)\" }, ...Secondary.parameters };","import { Card, Stack, Typography } from '@mui/joy';\nimport React, { useState } from 'react';\nimport MuiIcon from '../../atoms/MuiIcon'; \nimport dashboard from '../../../../public/assets/dashboard.png';\nimport MiniteButton from '../../atoms/MiniteButton';\nimport MiniteIconButton from '../../atoms/MiniteIconButton';\n\ninterface CryptoCard{\n    height:number;\n    width:number;\n    text:string;\n    url:string;\n}\nconst handleNeedHelp = () => {\n    console.log(\"Need help\");\n    alert('Need help');\n  };\n\nconst Navbar: React.FC<CryptoCard> = ( {height,width,text,url}) => {\n\n\n  return (\n    <Card variant=\"outlined\" sx={{ height:{height},width:{width} ,alignItems:'center',borderRadius:0,textAlign:'left'}} >    \n      \n  \n\n    <Stack spacing={4} alignContent={'center'} direction={'column'}> \n   <MiniteIconButton icon={dashboard} onClick={handleNeedHelp} height={12} width={12}/>\n    </Stack> \n  </Card>\n  );\n};\n\nexport default Navbar\n\n"],"names":[],"sourceRoot":""}